{"version":3,"file":"static/js/207.35b030e5.chunk.js","mappings":"gQAGO,MAAMA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAWE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAMvBC,GAAkBJ,EAAAA,EAAAA,GAAOK,EAAAA,EAAPL,CAAiBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4DAKnCI,EAAQP,EAAAA,EAAOQ,EAACC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yF,aCP7B,MAiGA,EAjGqBO,KACnB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,IACnCK,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAeC,IAAiB,IAAhB,OAAEC,GAAQD,EAC9B,MAAM,KAAEb,EAAI,MAAEe,GAAUD,EAExB,OAAQd,GACN,IAAK,OACHC,EAAQc,GACR,MACF,IAAK,QACHX,EAASW,GACT,MACF,IAAK,WACHT,EAAYS,GACZ,MACF,QACE,OACJ,EAiBIC,EAAQA,KACZf,EAAQ,IACRG,EAAS,IACTE,EAAY,GAAG,EAGjB,OACEW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAC7B,EAAS,CACRgC,SAvBeC,IACnBA,EAAIC,iBAEJ,MAAMC,EAAU,CACdvB,KAAMA,EAAKwB,OACXrB,MAAOA,EAAMqB,OACbnB,SAAUA,EAASmB,QAGrBd,GAASe,EAAAA,EAAAA,IAAOF,IAEhBP,GAAO,EAaHU,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,SAEpCC,YAAU,EACVC,aAAa,MAAKZ,SAAA,EAElBa,EAAAA,EAAAA,KAACvC,EAAe,CACdwC,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRC,KAAK,OACLpC,KAAK,OACLe,MAAOf,EACPqC,UAAQ,EACRC,SAAU1B,KAEZoB,EAAAA,EAAAA,KAACvC,EAAe,CACdwC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WACRC,KAAK,QACLpC,KAAK,QACLe,MAAOZ,EACPkC,UAAQ,EACRC,SAAU1B,KAEZoB,EAAAA,EAAAA,KAACvC,EAAe,CACdwC,GAAG,0BACHC,MAAM,WACNE,KAAK,WACLL,aAAa,mBACbI,QAAQ,WACRnC,KAAK,WACLe,MAAOV,EACPgC,UAAQ,EACRC,SAAU1B,KAEZoB,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAACH,KAAK,SAASD,QAAQ,YAAYK,KAAK,QAAOrB,SAAC,gBAIxDZ,IAASyB,EAAAA,EAAAA,KAACpC,EAAK,CAAAuB,SAAEZ,MACjB,E,uBC9FP,MAcA,EAdiBkC,KACf,MAAMC,GAAYlC,EAAAA,EAAAA,IAAYmC,EAAAA,IAE9B,OACE1B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEa,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACjB,GAAI,CAAEkB,UAAW,UAAYV,QAAQ,KAAIhB,SAAC,mBAGtDa,EAAAA,EAAAA,KAACjC,EAAY,IACZ2C,IAAaV,EAAAA,EAAAA,KAACc,EAAAA,EAAM,MACpB,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Box, TextField } from '@mui/material';\n\nexport const StyledBox = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  background-color: #fff;\n  border-radius: 4px;\n`;\n\nexport const Error = styled.p`\n  text-align: center;\n  color: red;\n  font-size: 20px;\n  margin-top: 30px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signup } from '../../redux/auth/authOperations';\nimport { selectAuthError } from '../../redux/auth/authSelectors';\nimport { Button } from '@mui/material';\nimport { Error, StyledBox, StyledTextField } from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(selectAuthError);\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const newUser = {\n      name: name.trim(),\n      email: email.trim(),\n      password: password.trim(),\n    };\n\n    dispatch(signup(newUser));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <StyledBox\n        onSubmit={handleSubmit}\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <StyledTextField\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          required\n          onChange={handleChange}\n        />\n        <StyledTextField\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          required\n          onChange={handleChange}\n        />\n        <StyledTextField\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          name=\"password\"\n          value={password}\n          required\n          onChange={handleChange}\n        />\n        <Button type=\"submit\" variant=\"contained\" size=\"large\">\n          Register\n        </Button>\n      </StyledBox>\n      {error && <Error>{error}</Error>}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import { useSelector } from 'react-redux';\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\nimport Loader from '../../components/Loader/Loader';\nimport { selectAuthIsLoading } from '../../redux/auth/authSelectors';\nimport { Typography } from '@mui/material';\n\nconst Register = () => {\n  const isLoading = useSelector(selectAuthIsLoading);\n\n  return (\n    <>\n      <Typography sx={{ textAlign: 'center' }} variant=\"h4\">\n        Register page\n      </Typography>\n      <RegisterForm />\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["StyledBox","styled","Box","_templateObject","_taggedTemplateLiteral","StyledTextField","TextField","_templateObject2","Error","p","_templateObject3","RegisterForm","name","setName","useState","email","setEmail","password","setPassword","error","useSelector","selectAuthError","dispatch","useDispatch","handleChange","_ref","target","value","reset","_jsxs","_Fragment","children","onSubmit","evt","preventDefault","newUser","trim","signup","component","sx","m","width","noValidate","autoComplete","_jsx","id","label","variant","type","required","onChange","Button","size","Register","isLoading","selectAuthIsLoading","Typography","textAlign","Loader"],"sourceRoot":""}